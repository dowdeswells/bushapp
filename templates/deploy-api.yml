parameters:
- name: azureSubscription 
  type: string 
- name: resourceGroupPrefix
  type: string
- name: envSuffix
  type: string


jobs:
- job: deploy_from_arm_templates
  variables:
  - name: resourceGroupName
    value: '${{ parameters.resourceGroupPrefix }}-${{ parameters.envSuffix }}'
  - name: apiName
    value: 'bushapp-api-${{ parameters.envSuffix }}'
  - name: templateLocation
    value: '$(Pipeline.Workspace)/ArmTemplates/api-plan-and-webapp.json'
  - name: apimName
    value: 'bushapp-apim-${{ parameters.envSuffix }}'
  - name: apimTemplateLocation
    value: '$(Pipeline.Workspace)/ArmTemplates/apim-template.json'

  steps:

  - download: current
    artifact: WebApp

  - download: current
    artifact: ArmTemplates

  - task: Bash@3
    inputs:
      targetType: 'inline'
      script: |
        # Write your commands here
        ls '$(Pipeline.Workspace)/ArmTemplates'
        ls '${{ variables.apimTemplateLocation }}'
    displayName: display variables 

  - task: AzureResourceManagerTemplateDeployment@3
    displayName: 'Deploy Web App'
    inputs:
      deploymentScope: 'Resource Group'
      azureResourceManagerConnection: '${{ parameters.azureSubscription }}'
      subscriptionId: '307e5a26-2005-49e7-8de1-ed32008bf357'
      action: 'Create Or Update Resource Group'
      resourceGroupName: '${{ variables.resourceGroupName }}'
      location: 'Australia East'
      templateLocation: 'Linked artifact'
      csmFile: '${{ variables.templateLocation }}'
      deploymentMode: 'Incremental'
      deploymentOutputs: 'apiTemplateOutputs'
      overrideParameters: '-webAppName "${{ variables.apiName }}"'

  - task: AzureRmWebAppDeployment@4
    displayName: 'Deploy to linux Azure Web App'
    inputs:
      ConnectionType: 'AzureRM'
      azureSubscription: ${{ parameters.azureSubscription }}
      appType: 'webAppLinux'
      WebAppName: '${{ variables.apiName }}'
      packageForLinux: '$(Pipeline.Workspace)/WebApp/**/*.zip'
      RuntimeStack: 'DOTNETCORE|3.1'

  - task: AzureResourceManagerTemplateDeployment@3
    displayName: 'Deploy APIM'
    inputs:
      deploymentScope: 'Resource Group'
      azureResourceManagerConnection: '${{ parameters.azureSubscription }}'
      subscriptionId: '307e5a26-2005-49e7-8de1-ed32008bf357'
      action: 'Create Or Update Resource Group'
      resourceGroupName: '${{ variables.resourceGroupName }}'
      location: 'Australia East'
      templateLocation: 'Linked artifact'
      csmFile: '${{ variables.apimTemplateLocation }}'
      deploymentMode: 'Incremental'
      deploymentOutputs: 'apimTemplateOutputs'
      overrideParameters: '-apimName "${{ variables.apimName }}" -publisherEmail "simon.dowdeswell@rockend.com.au" -publisherName "Simon Dowdeswell"'

  - task: AzurePowerShell@5
    displayName: 'Import api into apim'
    inputs:
      azureSubscription: ${{ parameters.azureSubscription }}
      ScriptType: 'InlineScript'
      azurePowerShellVersion: latestVersion
      pwsh: true
      Inline: |
        $apim = Get-AzApiManagement `
          -ResourceGroupName '${{ variables.resourceGroupName }}' `
          -Name '${{ variables.apimName }}'

        $apimContext = New-AzApiManagementContext `
          -ResourceGroupName $apim.ResourceGroupName `
          -ServiceName $apim.Name

        $api = Import-AzApiManagementApi `
          -Context $apimContext `
          -ApiId '${{ variables.apiName }}' `
          -Path 'bushapp' `
          -SpecificationFormat 'Swagger' `
          -SpecificationPath '$(Pipeline.Workspace)/WebApp/swagger.json'

        Set-AzApiManagementPolicy `
          -Context $apimContext `
          -ApiId '${{ variables.apiName }}' `
          -PolicyFilePath '$(Pipeline.Workspace)/ArmTemplates/api-policy.xml'



